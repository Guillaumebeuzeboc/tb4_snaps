name: turtlebot4-desktop
version: '0.1'
summary: Turtlebot4 desktop.
description: |
  Turtlebot4 desktop.

grade: devel
confinement: strict
base: core20

package-repositories:
- components: [main]
  formats: [deb]
  key-id: C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
  key-server: keyserver.ubuntu.com
  suites: [focal]
  type: apt
  url: http://repo.ros2.org/ubuntu/main

parts:
  ros2-galactic-extension:
    build-packages: [ros-galactic-ros-core]
    override-build: install -D -m 0755 launch ${SNAPCRAFT_PART_INSTALL}/snap/command-chain/ros2-launch
    plugin: nil
    source: $SNAPCRAFT_EXTENSIONS_DIR/ros2

  turtlebot4-desktop:
    after: [ros2-galactic-extension]
    plugin: colcon
    source: .
    colcon-catkin-cmake-args: ["-DCMAKE_BUILD_TYPE=Release"]
    build-packages: [git, python3-vcstool]
    stage-packages: [ros-galactic-ros2launch, ros-galactic-ros2run]
    override-pull: |
            snapcraftctl pull
            vcs import < tb4.repositories
            vcs import < turtlebot4/dependencies.repos
            vcs import < tb4_desktop.repositories
    build-environment:
    - ROS_VERSION: '2'
    - ROS_DISTRO: galactic

apps:
  view-robot:
    command: opt/ros/galactic/bin/ros2 launch turtlebot4_viz view_robot.launch.py
    plugs: [network, network-bind, home]
    command-chain: [snap/command-chain/ros2-launch]
    extensions: [kde-neon]
    environment:
      PYTHONPATH: $SNAP/opt/ros/galactic/lib/python3.8/site-packages:$SNAP/usr/lib/python3/dist-packages:${PYTHONPATH}
      ROS_DISTRO: galactic
      ROS_VERSION: '2'
      HOME: $SNAP_USER_COMMON
  rviz2:
    command: opt/ros/galactic/bin/ros2 run rviz2 rviz2
    plugs: [network, network-bind, home] # we leave access to home in case we need to access meshes
    command-chain: [snap/command-chain/ros2-launch]
    extensions: [kde-neon]
    environment:
      PYTHONPATH: $SNAP/opt/ros/galactic/lib/python3.8/site-packages:$SNAP/usr/lib/python3/dist-packages:${PYTHONPATH}
      ROS_DISTRO: galactic
      ROS_VERSION: '2'
      HOME: $SNAP_USER_COMMON
